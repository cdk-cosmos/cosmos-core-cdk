// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Entire App Stack Demo 1`] = `
Object {
  "Description": "Cosmos: Singleton resources for the Cosmos, like RootZone, CdkRepo and CdkMasterRole",
  "Outputs": Object {
    "CoreLibVersion": Object {
      "Export": Object {
        "Name": "CoreLibVersion",
      },
      "Value": "0.8.1",
    },
    "CrossAccountExportServiceToken": Object {
      "Export": Object {
        "Name": "CoreCrossAccountExportServiceToken",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "CustomCrossAccountExportsCustomResourceProviderHandler",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttCdkRepoName": Object {
      "Export": Object {
        "Name": "CoreDemoCosmos:ExportsOutputFnGetAttCdkRepoNameE40A1139",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "CdkRepo",
          "Name",
        ],
      },
    },
    "ExportsOutputRefRootZone": Object {
      "Export": Object {
        "Name": "CoreDemoCosmos:ExportsOutputRefRootZone2F3E9CEF",
      },
      "Value": Object {
        "Ref": "RootZone",
      },
    },
    "RootZoneZoneId": Object {
      "Export": Object {
        "Name": "CoreRootZoneId",
      },
      "Value": Object {
        "Ref": "RootZone",
      },
    },
    "RootZoneZoneName": Object {
      "Export": Object {
        "Name": "CoreRootZoneName",
      },
      "Value": "cosmos.com",
    },
    "RootZoneZoneNameServers": Object {
      "Export": Object {
        "Name": "CoreRootZoneNameServers",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Object {
            "Fn::GetAtt": Array [
              "RootZone",
              "NameServers",
            ],
          },
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters1ea5f596092e17f736bb3858bcd92c7ee059b9b12c438d5bd66732f41b565e35ArtifactHash": Object {
      "Description": "Artifact hash for asset \\"1ea5f596092e17f736bb3858bcd92c7ee059b9b12c438d5bd66732f41b565e35\\"",
      "Type": "String",
    },
    "AssetParameters1ea5f596092e17f736bb3858bcd92c7ee059b9b12c438d5bd66732f41b565e35S3Bucket": Object {
      "Description": "S3 bucket for asset \\"1ea5f596092e17f736bb3858bcd92c7ee059b9b12c438d5bd66732f41b565e35\\"",
      "Type": "String",
    },
    "AssetParameters1ea5f596092e17f736bb3858bcd92c7ee059b9b12c438d5bd66732f41b565e35S3VersionKey": Object {
      "Description": "S3 key for asset version \\"1ea5f596092e17f736bb3858bcd92c7ee059b9b12c438d5bd66732f41b565e35\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CdkMasterRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Array [
                  "codebuild.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "lambda.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AdministratorAccess",
              ],
            ],
          },
        ],
        "RoleName": "CoreCdkMasterRole",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkRepo": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RepositoryDescription": "Core CDK Repo for Demo Cosmos.",
        "RepositoryName": "core-demo-cdk-repo",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
        ],
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "CustomCrossAccountExportsCustomResourceProviderHandler": Object {
      "DependsOn": Array [
        "CdkMasterRole",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1ea5f596092e17f736bb3858bcd92c7ee059b9b12c438d5bd66732f41b565e35S3Bucket",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1ea5f596092e17f736bb3858bcd92c7ee059b9b12c438d5bd66732f41b565e35S3VersionKey",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1ea5f596092e17f736bb3858bcd92c7ee059b9b12c438d5bd66732f41b565e35S3VersionKey",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CdkMasterRole",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "RootZone": Object {
      "Properties": Object {
        "HostedZoneConfig": Object {
          "Comment": "Core TLD Root Zone for Demo Cosmos.",
        },
        "HostedZoneTags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
        ],
        "Name": "cosmos.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
  },
}
`;

exports[`Entire App Stack Demo/Dev 1`] = `
Object {
  "Description": "Cosmos Galaxy: Resources dependant on each Aws Account, like ShareVpc and CrossAccountRoles.",
  "Parameters": Object {
    "AssetParameters6b0331de58605c631537c5a80dc5657360fb00adddb96eb7f3a67bfc75dd2a34ArtifactHash": Object {
      "Description": "Artifact hash for asset \\"6b0331de58605c631537c5a80dc5657360fb00adddb96eb7f3a67bfc75dd2a34\\"",
      "Type": "String",
    },
    "AssetParameters6b0331de58605c631537c5a80dc5657360fb00adddb96eb7f3a67bfc75dd2a34S3Bucket": Object {
      "Description": "S3 bucket for asset \\"6b0331de58605c631537c5a80dc5657360fb00adddb96eb7f3a67bfc75dd2a34\\"",
      "Type": "String",
    },
    "AssetParameters6b0331de58605c631537c5a80dc5657360fb00adddb96eb7f3a67bfc75dd2a34S3VersionKey": Object {
      "Description": "S3 key for asset version \\"6b0331de58605c631537c5a80dc5657360fb00adddb96eb7f3a67bfc75dd2a34\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CdkCrossAccountRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "arn:aws:iam::1111:role/CoreCdkMasterRole",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AdministratorAccess",
              ],
            ],
          },
        ],
        "RoleName": "CoreCdkCrossAccountRole",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SharedKey": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "Share key for aws account.",
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::2222:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Dev",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "SharedKeyAlias": Object {
      "Properties": Object {
        "AliasName": "alias/SharedKey",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "SharedKey",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "SharedVpc": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Dev",
          },
        ],
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.ap-southeast-2.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters6b0331de58605c631537c5a80dc5657360fb00adddb96eb7f3a67bfc75dd2a34S3Bucket",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters6b0331de58605c631537c5a80dc5657360fb00adddb96eb7f3a67bfc75dd2a34S3VersionKey",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters6b0331de58605c631537c5a80dc5657360fb00adddb96eb7f3a67bfc75dd2a34S3VersionKey",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;

exports[`Entire App Stack Demo/Dev/SharedVpc 1`] = `
Object {
  "Resources": Object {
    "Vpc": Object {
      "Properties": Object {
        "CidrBlock": "10.0.1.0/24",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Dev",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Dev/SharedVpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcAppSubnet1RouteTable": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Dev",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Dev/SharedVpc/Vpc/AppSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcAppSubnet1RouteTableAssociation": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcAppSubnet1RouteTable",
        },
        "SubnetId": Object {
          "Ref": "VpcAppSubnet1Subnet",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcAppSubnet1Subnet": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.1.0/26",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "App",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Dev",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Dev/SharedVpc/Vpc/AppSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcAppSubnet2RouteTable": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Dev",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Dev/SharedVpc/Vpc/AppSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcAppSubnet2RouteTableAssociation": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcAppSubnet2RouteTable",
        },
        "SubnetId": Object {
          "Ref": "VpcAppSubnet2Subnet",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcAppSubnet2Subnet": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.1.64/26",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "App",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Dev",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Dev/SharedVpc/Vpc/AppSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcS3Gateway": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "VpcAppSubnet1RouteTable",
          },
          Object {
            "Ref": "VpcAppSubnet2RouteTable",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
  },
}
`;

exports[`Entire App Stack Demo/Mgt 1`] = `
Object {
  "Description": "Cosmos Galaxy: Resources dependant on each Aws Account, like ShareVpc and CrossAccountRoles.",
  "Resources": Object {
    "SharedKey": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "Share key for aws account.",
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::1111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "SharedKeyAlias": Object {
      "Properties": Object {
        "AliasName": "alias/SharedKey",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "SharedKey",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
  },
}
`;

exports[`Entire App Stack Demo/Mgt/CiCd 1`] = `
Object {
  "Description": "Cosmos SolarSystem: Resources dependant on each App Env, like Vpc and MainZone.",
  "Outputs": Object {
    "PrivateZoneZoneId": Object {
      "Export": Object {
        "Name": "CoreMgtCiCdPrivateZoneId",
      },
      "Value": Object {
        "Ref": "PrivateZone",
      },
    },
    "PrivateZoneZoneName": Object {
      "Export": Object {
        "Name": "CoreMgtCiCdPrivateZoneName",
      },
      "Value": "cicd.internal",
    },
    "VpcAZs": Object {
      "Export": Object {
        "Name": "CoreMgtCiCdVpcAZs",
      },
      "Value": "dummy1a,dummy1b",
    },
    "VpcCidrBlock": Object {
      "Export": Object {
        "Name": "CoreMgtCiCdVpcCidrBlock",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "Vpc",
          "CidrBlock",
        ],
      },
    },
    "VpcId": Object {
      "Export": Object {
        "Name": "CoreMgtCiCdVpcId",
      },
      "Value": Object {
        "Ref": "Vpc",
      },
    },
    "VpcIsolatedSubnetRouteTables": Object {
      "Export": Object {
        "Name": "CoreMgtCiCdVpcIsolatedSubnetRouteTableIds",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Array [
            Object {
              "Ref": "VpcAppSubnet1RouteTable",
            },
            Object {
              "Ref": "VpcAppSubnet2RouteTable",
            },
          ],
        ],
      },
    },
    "VpcIsolatedSubnets": Object {
      "Export": Object {
        "Name": "CoreMgtCiCdVpcIsolatedSubnetIds",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Array [
            Object {
              "Ref": "VpcAppSubnet1Subnet",
            },
            Object {
              "Ref": "VpcAppSubnet2Subnet",
            },
          ],
        ],
      },
    },
    "ZoneId": Object {
      "Export": Object {
        "Name": "CoreMgtCiCdZoneId",
      },
      "Value": Object {
        "Ref": "Zone",
      },
    },
    "ZoneName": Object {
      "Export": Object {
        "Name": "CoreMgtCiCdZoneName",
      },
      "Value": "cicd.cosmos.com",
    },
    "ZoneNameServers": Object {
      "Export": Object {
        "Name": "CoreMgtCiCdZoneNameServers",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Object {
            "Fn::GetAtt": Array [
              "Zone",
              "NameServers",
            ],
          },
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters766cffbf01840acd254eaa809d4dd89dc7059bd53b2a901718994b4e9a0d65f4ArtifactHash": Object {
      "Description": "Artifact hash for asset \\"766cffbf01840acd254eaa809d4dd89dc7059bd53b2a901718994b4e9a0d65f4\\"",
      "Type": "String",
    },
    "AssetParameters766cffbf01840acd254eaa809d4dd89dc7059bd53b2a901718994b4e9a0d65f4S3Bucket": Object {
      "Description": "S3 bucket for asset \\"766cffbf01840acd254eaa809d4dd89dc7059bd53b2a901718994b4e9a0d65f4\\"",
      "Type": "String",
    },
    "AssetParameters766cffbf01840acd254eaa809d4dd89dc7059bd53b2a901718994b4e9a0d65f4S3VersionKey": Object {
      "Description": "S3 key for asset version \\"766cffbf01840acd254eaa809d4dd89dc7059bd53b2a901718994b4e9a0d65f4\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CiCd": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.ap-southeast-2.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters766cffbf01840acd254eaa809d4dd89dc7059bd53b2a901718994b4e9a0d65f4S3Bucket",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters766cffbf01840acd254eaa809d4dd89dc7059bd53b2a901718994b4e9a0d65f4S3VersionKey",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters766cffbf01840acd254eaa809d4dd89dc7059bd53b2a901718994b4e9a0d65f4S3VersionKey",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "ConfigVpcAzs": Object {
      "Properties": Object {
        "Name": "/Cosmos/Mgt/CiCd/VpcAzs",
        "Tags": Object {
          "cosmos": "Demo",
          "cosmos:galaxy": "Mgt",
          "cosmos:solarsystem": "CiCd",
        },
        "Type": "String",
        "Value": "2",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "PrivateZone": Object {
      "Properties": Object {
        "HostedZoneConfig": Object {
          "Comment": "Core Main Private Zone for CiCd SolarSystem",
        },
        "HostedZoneTags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
        "Name": "cicd.internal.",
        "VPCs": Array [
          Object {
            "VPCId": Object {
              "Ref": "Vpc",
            },
            "VPCRegion": "ap-southeast-2",
          },
        ],
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "Vpc": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/24",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Mgt/CiCd/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcAppSubnet1RouteTable": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Mgt/CiCd/Vpc/AppSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcAppSubnet1RouteTableAssociation": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcAppSubnet1RouteTable",
        },
        "SubnetId": Object {
          "Ref": "VpcAppSubnet1Subnet",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcAppSubnet1Subnet": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/26",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "App",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Mgt/CiCd/Vpc/AppSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcAppSubnet2RouteTable": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Mgt/CiCd/Vpc/AppSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcAppSubnet2RouteTableAssociation": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcAppSubnet2RouteTable",
        },
        "SubnetId": Object {
          "Ref": "VpcAppSubnet2Subnet",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcAppSubnet2Subnet": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.0.64/26",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "App",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Mgt/CiCd/Vpc/AppSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcCloudWatchLogsEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcCloudWatchLogsEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-southeast-2.logs",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcCloudWatchLogsEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Demo/Mgt/CiCd/Vpc/CloudWatchLogsEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Mgt/CiCd/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcS3Gateway": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "VpcAppSubnet1RouteTable",
          },
          Object {
            "Ref": "VpcAppSubnet2RouteTable",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-southeast-2.ssm",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Demo/Mgt/CiCd/Vpc/SsmEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Mgt/CiCd/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSsmMessageEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmMessageEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-southeast-2.ssmmessages",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmMessageEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Demo/Mgt/CiCd/Vpc/SsmMessageEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Demo/Mgt/CiCd/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Zone": Object {
      "Properties": Object {
        "HostedZoneConfig": Object {
          "Comment": "Core Main Zone for CiCd SolarSystem",
        },
        "HostedZoneTags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
        "Name": "cicd.cosmos.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "ZoneDelegation": Object {
      "Properties": Object {
        "Comment": "Core Zone Delegation for CiCd SolarSystem.",
        "HostedZoneId": Object {
          "Fn::ImportValue": "CoreDemoCosmos:ExportsOutputRefRootZone2F3E9CEF",
        },
        "Name": "cicd.cosmos.com.",
        "ResourceRecords": Object {
          "Fn::GetAtt": Array [
            "Zone",
            "NameServers",
          ],
        },
        "TTL": "1800",
        "Type": "NS",
      },
      "Type": "AWS::Route53::RecordSet",
    },
  },
}
`;

exports[`Entire App Stack Demo/Mgt/CiCd/CiCd 1`] = `
Object {
  "Description": "Add CiCd Features to the SolarSystem",
  "Resources": Object {
    "CdkPipeline": Object {
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "CdkPipelineCdkArtifactBucket",
          },
          "Type": "S3",
        },
        "Name": "Core-Demo-Cdk-Pipeline",
        "RoleArn": "arn:aws:iam::1111:role/CoreCdkMasterRole",
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "master",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::ImportValue": "CoreDemoCosmos:ExportsOutputFnGetAttCdkRepoNameE40A1139",
                  },
                },
                "Name": "CdkCheckout",
                "Namespace": "CdkCheckout",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "CdkCodeOutput",
                  },
                ],
                "RoleArn": "arn:aws:iam::1111:role/CoreCdkMasterRole",
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"DIFF\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"true\\"},{\\"name\\":\\"DEPLOY\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"false\\"}]",
                  "ProjectName": Object {
                    "Ref": "CdkPipelineDeploy",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "CdkCodeOutput",
                  },
                ],
                "Name": "CdkDiff",
                "RoleArn": "arn:aws:iam::1111:role/CoreCdkMasterRole",
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1",
                },
                "Configuration": Object {
                  "CustomData": "Please review the CdkDiff build.",
                },
                "Name": "CdkDiffApproval",
                "RoleArn": "arn:aws:iam::1111:role/CoreCdkMasterRole",
                "RunOrder": 2,
              },
            ],
            "Name": "Diff",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"DIFF\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"false\\"},{\\"name\\":\\"DEPLOY\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"true\\"},{\\"name\\":\\"STACKS\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"-e CoreDemoCosmos CoreDemoMgtGalaxy CoreDemoMgtCiCdSolarSystem CoreDemoDevGalaxy\\"}]",
                  "ProjectName": Object {
                    "Ref": "CdkPipelineDeploy",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "CdkCodeOutput",
                  },
                ],
                "Name": "CdkDeploy",
                "RoleArn": "arn:aws:iam::1111:role/CoreCdkMasterRole",
                "RunOrder": 1,
              },
            ],
            "Name": "Deploy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "CiCd",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CdkPipelineCdkArtifactBucket": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "LogFilePrefix": "BucketAccessLogs/",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "CiCd",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CdkPipelineCdkArtifactBucketPolicy": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CdkPipelineCdkArtifactBucket",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CdkPipelineCdkArtifactBucket",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "ForceSSLOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CdkPipelineDeploy": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Location": Object {
            "Ref": "CdkPipelineCdkArtifactBucket",
          },
          "Name": "cdk.templates",
          "NamespaceType": "BUILD_ID",
          "Packaging": "ZIP",
          "Path": "CodeBuild",
          "Type": "S3",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "DIFF",
              "Type": "PLAINTEXT",
              "Value": "true",
            },
            Object {
              "Name": "DEPLOY",
              "Type": "PLAINTEXT",
              "Value": "true",
            },
            Object {
              "Name": "STACKS",
              "Type": "PLAINTEXT",
              "Value": "CoreDemoCosmos CoreDemoMgtGalaxy CoreDemoMgtCiCdSolarSystem CoreDemoDevGalaxy",
            },
          ],
          "Image": "aws/codebuild/standard:4.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "Core-Demo-Cdk-Deploy",
        "ServiceRole": "arn:aws:iam::1111:role/CoreCdkMasterRole",
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [],
      \\"runtime-versions\\": {
        \\"nodejs\\": \\"12\\"
      }
    },
    \\"pre_build\\": {
      \\"commands\\": [
        \\"npm ci\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"if [ $DIFF = true ]; then npx cdk diff \${STACKS}; fi;\\",
        \\"if [ $DEPLOY = true ]; then npx cdk deploy --require-approval=never \${STACKS}; fi;\\"
      ]
    }
  },
  \\"env\\": {},
  \\"artifacts\\": {
    \\"base-directory\\": \\"cdk.out\\",
    \\"files\\": [
      \\"*.template.json\\"
    ]
  }
}",
          "Location": Object {
            "Fn::Join": Array [
              "",
              Array [
                "https://git-codecommit.ap-southeast-2.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/v1/repos/",
                Object {
                  "Fn::ImportValue": "CoreDemoCosmos:ExportsOutputFnGetAttCdkRepoNameE40A1139",
                },
              ],
            ],
          },
          "Type": "CODECOMMIT",
        },
        "SourceVersion": "master",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "CiCd",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
  },
}
`;
